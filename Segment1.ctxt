#BlueJ class context
comment0.target=Segment1
comment0.text=\n\ Segment1\ represents\ a\ line\ (parallel\ to\ the\ x-axis)\ using\ two\ Points.\n\ Maman\ 12\ Q2\n\ @author\ Irit\ Amelchenko\n
comment1.params=left\ right
comment1.target=Segment1(Point,\ Point)
comment1.text=\n\ Constructs\ a\ new\ segment\ using\ two\ Points.\ If\ the\ y\ coordinates\ are\ different,\ change\ the\ y\ of\ the\ right\ point\ to\ be\ equal\ to\ the\ y\ of\ the\ left\ point.\n\ @param\ left\ the\ left\ point\ of\ the\ segment\n\ @param\ right\ the\ right\ point\ of\ the\ segment\n
comment10.params=other
comment10.target=boolean\ isUnder(Segment1)
comment10.text=\n\ Check\ if\ this\ segment\ is\ under\ a\ reference\ segment.\n\ @param\ other\ the\ reference\ segment.\n\ @return\ True\ if\ this\ segment\ is\ under\ the\ reference\ segment\n
comment11.params=other
comment11.target=boolean\ isLeft(Segment1)
comment11.text=\n\ Check\ if\ this\ segment\ is\ left\ of\ a\ received\ segment.\n\ @param\ other\ the\ reference\ segment.\n\ @return\ True\ if\ this\ segment\ is\ left\ to\ the\ reference\ segment.\n
comment12.params=other
comment12.target=boolean\ isRight(Segment1)
comment12.text=\n\ Check\ if\ this\ segment\ is\ right\ of\ a\ received\ segment.\n\ @param\ other\ the\ reference\ segment.\n\ @return\ True\ if\ this\ segment\ is\ right\ to\ the\ reference\ segment.\n
comment13.params=delta
comment13.target=void\ moveHorizontal(double)
comment13.text=\n\ Move\ the\ segment\ horizontally\ by\ delta.\n\ @param\ delta\ the\ displacement\ size.\n
comment14.params=delta
comment14.target=void\ moveVertical(double)
comment14.text=\n\ Move\ the\ segment\ vertically\ by\ delta.\n\ @param\ delta\ the\ displacement\ size.\n
comment15.params=delta
comment15.target=void\ changeSize(double)
comment15.text=\n\ Change\ the\ segment\ size\ by\ moving\ the\ right\ point\ by\ delta.\ Will\ be\ implemented\ only\ for\ a\ valid\ delta\:\ only\ if\ the\ new\ right\ point\ remains\ the\ right\ point.\n\ @param\ delta\ the\ length\ change.\n
comment16.params=p
comment16.target=boolean\ pointOnSegment(Point)
comment16.text=\n\ Check\ if\ a\ point\ is\ located\ on\ the\ segment.\n\ @param\ p\ -\ a\ point\ to\ be\ checked\n\ @return\ True\ if\ p\ is\ on\ this\ segment\n
comment17.params=other
comment17.target=boolean\ isBigger(Segment1)
comment17.text=\n\ Check\ if\ this\ segment\ is\ bigger\ than\ a\ reference\ segment.\n\ @param\ other\ the\ reference\ segment\n\ @\ return\ True\ if\ this\ segment\ is\ bigger\ than\ the\ reference\ segment\n
comment18.params=other
comment18.target=double\ overlap(Segment1)
comment18.text=\n\ Returns\ the\ overlap\ size\ of\ this\ segment\ and\ a\ reference\ segment.\n\ @param\ other\ the\ reference\ segment\n\ @return\ The\ overlap\ size.\n
comment19.params=other
comment19.target=double\ trapezePerimeter(Segment1)
comment19.text=\n\ Compute\ the\ trapeze\ perimeter,\ which\ is\ constructed\ by\ this\ segment\ and\ a\ reference\ segment.\n\ @param\ oter\ the\ reference\ segment.\n\ @return\ the\ trapeze\ perimeter.\n
comment2.params=leftX\ leftY\ rightX\ rightY
comment2.target=Segment1(double,\ double,\ double,\ double)
comment2.text=\n\ Constructs\ a\ new\ segment\ using\ 4\ specified\ x\ y\ coordinates\:\ Two\ coordinates\ for\ the\ left\ point\ and\ two\ coordinates\ for\ the\ right\ point.\ \n\ If\ the\ y\ coordinates\ are\ different,\ change\ the\ y\ of\ the\ right\ point\ to\ be\ equal\ to\ the\ y\ of\ the\ left\ point.\n\ @param\ leftX\ X\ value\ of\ left\ point.\n\ @param\ leftY\ Y\ value\ of\ left\ point.\n\ @param\ rightX\ X\ value\ of\ right\ point.\n\ @param\ rightY\ Y\ value\ of\ right\ point.\n
comment3.params=other
comment3.target=Segment1(Segment1)
comment3.text=\n\ Copy\ Constructor.\ Construct\ a\ segment\ using\ a\ reference\ segment.\n\ @param\ other\ the\ reference\ segment.\n
comment4.params=
comment4.target=Point\ getPoLeft()
comment4.text=\n\ Returns\ the\ left\ point\ of\ the\ segment.\n\ @return\ The\ left\ point\ of\ the\ segment.\n
comment5.params=
comment5.target=Point\ getPoRight()
comment5.text=\n\ Returns\ the\ right\ point\ of\ the\ segment.\n\ @return\ The\ right\ point\ of\ the\ segment.\n
comment6.params=
comment6.target=double\ getLength()
comment6.text=\n\ Returns\ the\ segment\ length.\n\ @return\ The\ segment\ length.\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\n\ Return\ a\ string\ representation\ of\ this\ segment\ in\ the\ format\ (3.0,4.0)---(3.0,6.0).\n\ @override\ toString\ in\ class\ java.lang.Object\n\ @return\ String\ representation\ of\ this\ segment.\n
comment8.params=other
comment8.target=boolean\ equals(Segment1)
comment8.text=\n\ Check\ if\ the\ reference\ segment\ is\ equal\ to\ this\ segment.\n\ @param\ other\ the\ reference\ segment.\n\ @return\ True\ if\ the\ reference\ segment\ is\ equal\ to\ this\ segment.\n
comment9.params=other
comment9.target=boolean\ isAbove(Segment1)
comment9.text=\n\ Check\ if\ this\ segment\ is\ above\ a\ reference\ segment.\n\ @param\ other\ the\ reference\ segment.\n\ @return\ True\ if\ this\ segment\ is\ above\ the\ reference\ segment.\n
numComments=20
